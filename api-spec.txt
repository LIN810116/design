Route Structure
===============

GET /api/OBJECTS
	=> query()
	<= [OBJECT,]

GET /api/OBJECT/:id 
	=> get(id)
	<= OBJECT

POST /api/OBJECT 
	=> create()
	<= OBJECT

POST /api/OBJECT/:id 
	=> update()
	<= OBJECT

DELETE /api/OBJECT/:id 
	=> delete()
	<= OBJECT

	
	
API Requirements
================


/api/party(/:id)
----------------
get(id) ? volumes;comments;parents[=all];children[=all];funding TODO: tags;network
update(id) TODO


/api/party/:id/authorize
------------------------
stuff...


/api/volume(/:id)
-----------------
get(id) ? access;citations;tags;comments;funding;categories
create() TODO
update(id) TODO
delete() TODO
updateCitations(id) TODO


/api/volume/:id/access
------------
query() ? name=STR
get(volumeId, partyId)
create(volumeId, partyId)
update(volumeId, partyId)
delete(volumeId, partyId)


/api/slot(/:id)?start=;end=
---------------
query() ? volume=ID;record=ID;asset=ID TODO
get(id) ? assets;records;tags;comments
create() TODO
update(id) TODO
delete(id) TODO


/api/record(/:id)
----------------------------
query() ? volume=ID;category=NAME TODO: container=ID;asset=ID
get(id) ? slots TODO: assets
create() TODO
update(id) TODO
delete(id) TODO


/api/asset(/:id)
----------------
get(id)
create() TODO
update(id) TODO


/api/slot-asset(/:id)?start=;end=
------------------------------------
query() ? volume=ID & slot=ID & record=ID
get(id)
create()
update(id)
delete(id)


/api/comment(/id)
-----------------
create() ?container=ID


/api/tag(/:name)
--------------
update(name) ?container=ID
