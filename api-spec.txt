Route Structure
===============

GET /api/OBJECTS
	=> query()
	<= [OBJECT,]

GET /api/OBJECT/:id 
	=> get(id)
	<= OBJECT

POST /api/OBJECT 
	=> create()
	<= OBJECT

POST /api/OBJECT/:id 
	=> update()
	<= OBJECT

DELETE /api/OBJECT/:id 
	=> delete()
	<= OBJECT

	
	
API Requirements
================


/api/party(/:id)
----------------
GET /api/party/ID?volumes;comments;parents[=all];children[=all];funding TODO: tags;network
POST /api/party/ID


/api/party/:id/authorize/:id
------------------------
GET /api/party/ID/authorize => all parents and children
GET /api/party/ID/authorize/SEARCH => party search
POST /api/party/ID/authorize/ID => update/create child
POST /api/party/ID/authorize/ID/apply => create parent
DELETE /api/party/ID/authorize/ID => delete child or parent


/api/volume(/:id)
-----------------
GET /api/volume/ID?summary;access;citations;tags;comments;funding;categories;records;sessions;assets;top
POST /api/volume?owner=ID
POST /api/volume/ID
delete() NOT SUPPORTED


/api/volume/:id/access/:id
------------
GET /api/volume/ID/access
GET /api/volume/ID/access/SEARCH => party search
POST /api/volume/ID/access/ID
DELETE /api/volume/ID/access/ID


/api/slot(/:id)?start=;end=
---------------
query() ? volume=ID;record=ID;asset=ID TODO
GET /api/slot/ID?segment=;assets;records;tags;comments
POST /api/slot/ID?segment=
delete(id) TODO


/api/record(/:id)
----------------------------
GET /api/record?volume=ID;category=NAME TODO: container=ID;asset=ID
GET /api/record/ID?slots TODO: assets
POST /api/record?volume=ID;category=NAME
POST /api/record/ID
delete(id) TODO


/api/asset(/:id)
----------------
GET /api/asset/ID?slot
POST /api/asset/ID
create() TODO


/api/slot(/:id)/asset(/:id)?start=;end= TODO
------------------------------------
GET /api/slot/ID/asset/ID?segment=
query() ? volume=ID & slot=ID & record=ID TODO


/api/comment(/id)
-----------------
POST /api/comment?container=ID;segment=


/api/tag(/:name)
--------------
GET /api/tag/NAME?slots
POST /api/tag/NAME?container=ID;segment=
